#!/bin/bash

if ( [ "$#" = 0 ] || [ "$1" = "-h" ] || [ "$1" = "--help" ] ); then
  echo "
DESCRIPTION
  Command line interface to Kaldi installed in a docker container. It assumes
  that docker is installed, that it can be executed without sudo and that the
  corresponding image is tagged as kaldi:active. It will only work if executed
  from and referencing only files in the host's /Users, /home, /mnt, /media or
  /tmp directories.

  The interface can also be used to execute custom scripts inside the
  container, e.g. to run a long pipe of different Kaldi commands. For this to
  work, the custom script must be located in a directory accessible to the
  container (see above) and be in your \$DPATH or be referenced with its full
  or relative path.

SYNOPSIS
  kaldi-docker COMMAND ARGUMENTS

  COMMAND is any of the Kaldi command line tools or a custom script as explained
  above. To see the detailed help of a command, just provide --help as argument,
  e.g. kaldi-docker fstcopy --help.
";
  exit 0;
fi

CMD=("$@");
CMD=("${CMD[@]//$'\x27'/$'\x27\x22\x27\x22\x27'}");
CMD=("${CMD[@]/#/$'\x27'}");
CMD=("${CMD[@]/%/$'\x27'}");

OPTS=( --user $(id -u):$(id -g) );
OPTS+=( --rm );
OPTS+=( --workdir "$(pwd)" );
OPTS+=( --interactive );
OPTS+=( --log-driver none );
OPTS+=( --env TERM=xterm-256color );
[ -d "/Users" ] && OPTS+=( -v /Users:/Users );
[ -d "/home" ]  && OPTS+=( -v /home:/home );
[ -d "/mnt" ]   && OPTS+=( -v /mnt:/mnt );
[ -d "/media" ] && OPTS+=( -v /media:/media );
[ -d "/tmp" ]   && OPTS+=( -v /tmp:/tmp );

DPATH="";
[ "$DPATH" != "" ] && DPATH="PATH=\"$DPATH:\$PATH\" ";

docker run "${OPTS[@]}" kaldi:active \
  bash -c "$DPATH${CMD[*]}";
